(function(){var require,define;(function(){var modules={};var requireStack=[];var inProgressModules={};function build(module){var factory=module.factory;module.exports={};delete module.factory;factory(require,module.exports,module);return module.exports}require=function(id){if(!modules[id]){throw"module "+id+" not found"}else{if(id in inProgressModules){var cycle=requireStack.slice(inProgressModules[id]).join("->")+"->"+id;throw"Cycle in require graph: "+cycle}}if(modules[id].factory){try{inProgressModules[id]=requireStack.length;requireStack.push(id);return build(modules[id])}finally{delete inProgressModules[id];requireStack.pop()}}return modules[id].exports};define=function(id,factory){if(modules[id]){throw"module "+id+" already defined"}modules[id]={id:id,factory:factory}};define.remove=function(id){delete modules[id]}})();if(typeof module==="object"&&typeof require==="function"){module.exports.require=require;module.exports.define=define}define("cordova",function(require,exports,module){var channel=require("cordova/channel");document.addEventListener("DOMContentLoaded",function(){channel.onDOMContentLoaded.fire()},false);if(document.readyState=="complete"||document.readyState=="interactive"){channel.onDOMContentLoaded.fire()}var m_document_addEventListener=document.addEventListener;var m_document_removeEventListener=document.removeEventListener;var m_window_addEventListener=window.addEventListener;var m_window_removeEventListener=window.removeEventListener;var documentEventHandlers={},windowEventHandlers={};document.addEventListener=function(evt,handler,capture){var e=evt.toLowerCase();if(typeof documentEventHandlers[e]!="undefined"){documentEventHandlers[e].subscribe(handler)}else{m_document_addEventListener.call(document,evt,handler,capture)}};window.addEventListener=function(evt,handler,capture){var e=evt.toLowerCase();if(typeof windowEventHandlers[e]!="undefined"){windowEventHandlers[e].subscribe(handler)}else{m_window_addEventListener.call(window,evt,handler,capture)}};document.removeEventListener=function(evt,handler,capture){var e=evt.toLowerCase();if(typeof documentEventHandlers[e]!="undefined"){documentEventHandlers[e].unsubscribe(handler)}else{m_document_removeEventListener.call(document,evt,handler,capture)}};window.removeEventListener=function(evt,handler,capture){var e=evt.toLowerCase();if(typeof windowEventHandlers[e]!="undefined"){windowEventHandlers[e].unsubscribe(handler)}else{m_window_removeEventListener.call(window,evt,handler,capture)}};function createEvent(type,data){var event=document.createEvent("Events");event.initEvent(type,false,false);if(data){for(var i in data){if(data.hasOwnProperty(i)){event[i]=data[i]}}}return event}if(typeof window.console==="undefined"){window.console={log:function(){}}}var cordova={define:define,require:require,addWindowEventHandler:function(event){return(windowEventHandlers[event]=channel.create(event))},addStickyDocumentEventHandler:function(event){return(documentEventHandlers[event]=channel.createSticky(event))},addDocumentEventHandler:function(event){return(documentEventHandlers[event]=channel.create(event))},removeWindowEventHandler:function(event){delete windowEventHandlers[event]},removeDocumentEventHandler:function(event){delete documentEventHandlers[event]},getOriginalHandlers:function(){return{document:{addEventListener:m_document_addEventListener,removeEventListener:m_document_removeEventListener},window:{addEventListener:m_window_addEventListener,removeEventListener:m_window_removeEventListener}}},fireDocumentEvent:function(type,data,bNoDetach){var evt=createEvent(type,data);if(typeof documentEventHandlers[type]!="undefined"){if(bNoDetach){documentEventHandlers[type].fire(evt)}else{setTimeout(function(){documentEventHandlers[type].fire(evt)},0)}}else{document.dispatchEvent(evt)}},fireWindowEvent:function(type,data){var evt=createEvent(type,data);if(typeof windowEventHandlers[type]!="undefined"){setTimeout(function(){windowEventHandlers[type].fire(evt)},0)}else{window.dispatchEvent(evt)}},callbackId:Math.floor(Math.random()*2000000000),callbacks:{},callbackStatus:{NO_RESULT:0,OK:1,CLASS_NOT_FOUND_EXCEPTION:2,ILLEGAL_ACCESS_EXCEPTION:3,INSTANTIATION_EXCEPTION:4,MALFORMED_URL_EXCEPTION:5,IO_EXCEPTION:6,INVALID_ACTION:7,JSON_EXCEPTION:8,ERROR:9},callbackSuccess:function(callbackId,args){try{cordova.callbackFromNative(callbackId,true,args.status,args.message,args.keepCallback)}catch(e){console.log("Error in error callback: "+callbackId+" = "+e)}},callbackError:function(callbackId,args){try{cordova.callbackFromNative(callbackId,false,args.status,args.message,args.keepCallback)}catch(e){console.log("Error in error callback: "+callbackId+" = "+e)}},callbackFromNative:function(callbackId,success,status,message,keepCallback){var callback=cordova.callbacks[callbackId];if(callback){if(success&&status==cordova.callbackStatus.OK){callback.success&&callback.success(message)}else{if(!success){callback.fail&&callback.fail(message)}}if(!keepCallback){delete cordova.callbacks[callbackId]}}},addConstructor:function(func){channel.onCordovaReady.subscribe(function(){try{func()}catch(e){console.log("Failed to run constructor: "+e)}})}};channel.onPause=cordova.addDocumentEventHandler("pause");channel.onResume=cordova.addDocumentEventHandler("resume");channel.onDeviceReady=cordova.addStickyDocumentEventHandler("deviceready");module.exports=cordova});define("cordova/builder",function(require,exports,module){var utils=require("cordova/utils");function each(objects,func,context){for(var prop in objects){if(objects.hasOwnProperty(prop)){func.apply(context,[objects[prop],prop])}}}function assignOrWrapInDeprecateGetter(obj,key,value,message){if(message){utils.defineGetter(obj,key,function(){window.console&&console.log(message);return value})}else{obj[key]=value}}function include(parent,objects,clobber,merge){each(objects,function(obj,key){try{var result=obj.path?require(obj.path):{};if(clobber){if(typeof parent[key]==="undefined"){assignOrWrapInDeprecateGetter(parent,key,result,obj.deprecated)}else{if(typeof obj.path!=="undefined"){if(merge){recursiveMerge(parent[key],result)}else{assignOrWrapInDeprecateGetter(parent,key,result,obj.deprecated)}}}result=parent[key]}else{if(typeof parent[key]=="undefined"){assignOrWrapInDeprecateGetter(parent,key,result,obj.deprecated)}else{if(merge&&typeof obj.path!=="undefined"){recursiveMerge(result,parent[key]);parent[key]=result}else{result=parent[key]}}}if(obj.children){include(result,obj.children,clobber,merge)}}catch(e){utils.alert("Exception building cordova JS globals: "+e+' for key "'+key+'"')}})}function recursiveMerge(target,src){for(var prop in src){if(src.hasOwnProperty(prop)){if(typeof target.prototype!=="undefined"&&target.prototype.constructor===target){target.prototype[prop]=src[prop]}else{target[prop]=typeof src[prop]==="object"?recursiveMerge(target[prop],src[prop]):src[prop]}}}return target}module.exports={build:function(objects){return{intoButDoNotClobber:function(target){include(target,objects,false,false)},intoAndClobber:function(target){include(target,objects,true,false)},intoAndMerge:function(target){include(target,objects,true,true)}}}}});define("cordova/channel",function(require,exports,module){var utils=require("cordova/utils"),nextGuid=1;var Channel=function(type,sticky){this.type=type;this.handlers={};this.state=sticky?1:0;this.fireArgs=null;this.numHandlers=0;this.onHasSubscribersChange=null},channel={join:function(h,c){var len=c.length,i=len,f=function(){if(!(--i)){h()}};for(var j=0;j<len;j++){if(c[j].state===0){throw Error("Can only use join with sticky channels.")}c[j].subscribe(f)}if(!len){h()}},create:function(type){return channel[type]=new Channel(type,false)},createSticky:function(type){return channel[type]=new Channel(type,true)},deviceReadyChannelsArray:[],deviceReadyChannelsMap:{},waitForInitialization:function(feature){if(feature){var c=channel[feature]||this.createSticky(feature);this.deviceReadyChannelsMap[feature]=c;this.deviceReadyChannelsArray.push(c)}},initializationComplete:function(feature){var c=this.deviceReadyChannelsMap[feature];if(c){c.fire()}}};function forceFunction(f){if(typeof f!="function"){throw"Function required as first argument!"}}Channel.prototype.subscribe=function(f,c){forceFunction(f);if(this.state==2){f.apply(c||this,this.fireArgs);return}var func=f,guid=f.observer_guid;if(typeof c=="object"){func=utils.close(c,f)}if(!guid){guid=""+nextGuid++}func.observer_guid=guid;f.observer_guid=guid;if(!this.handlers[guid]){this.handlers[guid]=func;this.numHandlers++;if(this.numHandlers==1){this.onHasSubscribersChange&&this.onHasSubscribersChange()}}};Channel.prototype.unsubscribe=function(f){forceFunction(f);var guid=f.observer_guid,handler=this.handlers[guid];if(handler){delete this.handlers[guid];this.numHandlers--;if(this.numHandlers===0){this.onHasSubscribersChange&&this.onHasSubscribersChange()}}};Channel.prototype.fire=function(e){var fail=false,fireArgs=Array.prototype.slice.call(arguments);if(this.state==1){this.state=2;this.fireArgs=fireArgs}if(this.numHandlers){var toCall=[];for(var item in this.handlers){toCall.push(this.handlers[item])}for(var i=0;i<toCall.length;++i){toCall[i].apply(this,fireArgs)}if(this.state==2&&this.numHandlers){this.numHandlers=0;this.handlers={};this.onHasSubscribersChange&&this.onHasSubscribersChange()}}};channel.createSticky("onDOMContentLoaded");channel.createSticky("onNativeReady");channel.createSticky("onCordovaReady");channel.createSticky("onCordovaInfoReady");channel.createSticky("onCordovaConnectionReady");channel.createSticky("onDeviceReady");channel.create("onResume");channel.create("onPause");channel.createSticky("onDestroy");channel.waitForInitialization("onCordovaReady");channel.waitForInitialization("onCordovaConnectionReady");module.exports=channel});define("cordova/commandProxy",function(require,exports,module){var CommandProxyMap={};module.exports={add:function(id,proxyObj){console.log("adding proxy for "+id);CommandProxyMap[id]=proxyObj;return proxyObj},remove:function(id){var proxy=CommandProxyMap[id];delete CommandProxyMap[id];CommandProxyMap[id]=null;return proxy},get:function(service,action){return(CommandProxyMap[service]?CommandProxyMap[service][action]:null)}}});define("cordova/common",function(require,exports,module){module.exports={objects:{cordova:{path:"cordova",children:{exec:{path:"cordova/exec"},logger:{path:"cordova/plugin/logger"}}},Cordova:{children:{exec:{path:"cordova/exec"}}},navigator:{children:{notification:{path:"cordova/plugin/notification"},accelerometer:{path:"cordova/plugin/accelerometer"},battery:{path:"cordova/plugin/battery"},camera:{path:"cordova/plugin/Camera"},compass:{path:"cordova/plugin/compass"},connection:{path:"cordova/plugin/network"},contacts:{path:"cordova/plugin/contacts"},device:{children:{capture:{path:"cordova/plugin/capture"}}},geolocation:{path:"cordova/plugin/geolocation"},globalization:{path:"cordova/plugin/globalization"},network:{children:{connection:{path:"cordova/plugin/network",deprecated:"navigator.network.connection is deprecated. Use navigator.connection instead."}}},splashscreen:{path:"cordova/plugin/splashscreen"}}},Acceleration:{path:"cordova/plugin/Acceleration"},Camera:{path:"cordova/plugin/CameraConstants"},CameraPopoverOptions:{path:"cordova/plugin/CameraPopoverOptions"},CaptureError:{path:"cordova/plugin/CaptureError"},CaptureAudioOptions:{path:"cordova/plugin/CaptureAudioOptions"},CaptureImageOptions:{path:"cordova/plugin/CaptureImageOptions"},CaptureVideoOptions:{path:"cordova/plugin/CaptureVideoOptions"},CompassHeading:{path:"cordova/plugin/CompassHeading"},CompassError:{path:"cordova/plugin/CompassError"},ConfigurationData:{path:"cordova/plugin/ConfigurationData"},Connection:{path:"cordova/plugin/Connection"},Contact:{path:"cordova/plugin/Contact"},ContactAddress:{path:"cordova/plugin/ContactAddress"},ContactError:{path:"cordova/plugin/ContactError"},ContactField:{path:"cordova/plugin/ContactField"},ContactFindOptions:{path:"cordova/plugin/ContactFindOptions"},ContactName:{path:"cordova/plugin/ContactName"},ContactOrganization:{path:"cordova/plugin/ContactOrganization"},Coordinates:{path:"cordova/plugin/Coordinates"},device:{path:"cordova/plugin/device"},DirectoryEntry:{path:"cordova/plugin/DirectoryEntry"},DirectoryReader:{path:"cordova/plugin/DirectoryReader"},Entry:{path:"cordova/plugin/Entry"},File:{path:"cordova/plugin/File"},FileEntry:{path:"cordova/plugin/FileEntry"},FileError:{path:"cordova/plugin/FileError"},FileReader:{path:"cordova/plugin/FileReader"},FileSystem:{path:"cordova/plugin/FileSystem"},FileTransfer:{path:"cordova/plugin/FileTransfer"},FileTransferError:{path:"cordova/plugin/FileTransferError"},FileUploadOptions:{path:"cordova/plugin/FileUploadOptions"},FileUploadResult:{path:"cordova/plugin/FileUploadResult"},FileWriter:{path:"cordova/plugin/FileWriter"},Flags:{path:"cordova/plugin/Flags"},GlobalizationError:{path:"cordova/plugin/GlobalizationError"},LocalFileSystem:{path:"cordova/plugin/LocalFileSystem"},Media:{path:"cordova/plugin/Media"},MediaError:{path:"cordova/plugin/MediaError"},MediaFile:{path:"cordova/plugin/MediaFile"},MediaFileData:{path:"cordova/plugin/MediaFileData"},Metadata:{path:"cordova/plugin/Metadata"},Position:{path:"cordova/plugin/Position"},PositionError:{path:"cordova/plugin/PositionError"},ProgressEvent:{path:"cordova/plugin/ProgressEvent"},requestFileSystem:{path:"cordova/plugin/requestFileSystem"},resolveLocalFileSystemURI:{path:"cordova/plugin/resolveLocalFileSystemURI"}}}});define("cordova/exec",function(require,exports,module){var cordova=require("cordova"),nativeApiProvider=require("cordova/plugin/android/nativeapiprovider"),jsToNativeModes={PROMPT:0,JS_OBJECT:1,LOCATION_CHANGE:2},nativeToJsModes={POLLING:0,LOAD_URL:1,ONLINE_EVENT:2,PRIVATE_API:3},jsToNativeBridgeMode,nativeToJsBridgeMode=nativeToJsModes.ONLINE_EVENT,pollEnabled=false,messagesFromNative=[];function androidExec(success,fail,service,action,args){if(jsToNativeBridgeMode===undefined){androidExec.setJsToNativeBridgeMode(jsToNativeModes.JS_OBJECT)}var callbackId=service+cordova.callbackId++,argsJson=JSON.stringify(args),returnValue;function captureReturnValue(value){returnValue=value;success&&success(value)}cordova.callbacks[callbackId]={success:captureReturnValue,fail:fail};if(jsToNativeBridgeMode==jsToNativeModes.LOCATION_CHANGE){window.location="http://cdv_exec/"+service+"#"+action+"#"+callbackId+"#"+argsJson}else{var messages=nativeApiProvider.get().exec(service,action,callbackId,argsJson);androidExec.processMessages(messages)}if(cordova.callbacks[callbackId]){if(success||fail){cordova.callbacks[callbackId].success=success}else{delete cordova.callbacks[callbackId]}}return returnValue}function pollOnce(){var msg=nativeApiProvider.get().retrieveJsMessages();androidExec.processMessages(msg)}function pollingTimerFunc(){if(pollEnabled){pollOnce();setTimeout(pollingTimerFunc,50)}}function hookOnlineApis(){function proxyEvent(e){cordova.fireWindowEvent(e.type)}window.addEventListener("online",pollOnce,false);window.addEventListener("offline",pollOnce,false);cordova.addWindowEventHandler("online");cordova.addWindowEventHandler("offline");document.addEventListener("online",proxyEvent,false);document.addEventListener("offline",proxyEvent,false)}hookOnlineApis();androidExec.jsToNativeModes=jsToNativeModes;androidExec.nativeToJsModes=nativeToJsModes;androidExec.setJsToNativeBridgeMode=function(mode){if(mode==jsToNativeModes.JS_OBJECT&&!window._cordovaNative){console.log("Falling back on PROMPT mode since _cordovaNative is missing.");mode=jsToNativeModes.PROMPT}nativeApiProvider.setPreferPrompt(mode==jsToNativeModes.PROMPT);jsToNativeBridgeMode=mode};androidExec.setNativeToJsBridgeMode=function(mode){if(mode==nativeToJsBridgeMode){return}if(nativeToJsBridgeMode==nativeToJsModes.POLLING){pollEnabled=false}nativeToJsBridgeMode=mode;nativeApiProvider.get().setNativeToJsBridgeMode(mode);if(mode==nativeToJsModes.POLLING){pollEnabled=true;setTimeout(pollingTimerFunc,1)}};function processMessage(message){try{var firstChar=message.charAt(0);if(firstChar=="J"){eval(message.slice(1))}else{if(firstChar=="S"||firstChar=="F"){var success=firstChar=="S";var keepCallback=message.charAt(1)=="1";var spaceIdx=message.indexOf(" ",2);var status=+message.slice(2,spaceIdx);var nextSpaceIdx=message.indexOf(" ",spaceIdx+1);var callbackId=message.slice(spaceIdx+1,nextSpaceIdx);var payloadKind=message.charAt(nextSpaceIdx+1);var payload;if(payloadKind=="s"){payload=message.slice(nextSpaceIdx+2)}else{if(payloadKind=="t"){payload=true}else{if(payloadKind=="f"){payload=false}else{if(payloadKind=="N"){payload=null}else{if(payloadKind=="n"){payload=+message.slice(nextSpaceIdx+2)}else{payload=JSON.parse(message.slice(nextSpaceIdx+1))}}}}}cordova.callbackFromNative(callbackId,success,status,payload,keepCallback)}else{console.log("processMessage failed: invalid message:"+message)}}}catch(e){console.log("processMessage failed: Message: "+message);console.log("processMessage failed: Error: "+e);console.log("processMessage failed: Stack: "+e.stack)}}androidExec.processMessages=function(messages){if(messages){messagesFromNative.push(messages);while(messagesFromNative.length){messages=messagesFromNative.shift();if(messages=="*"){window.setTimeout(pollOnce,0);continue}var spaceIdx=messages.indexOf(" ");var msgLen=+messages.slice(0,spaceIdx);var message=messages.substr(spaceIdx+1,msgLen);messages=messages.slice(spaceIdx+msgLen+1);if(messages){messagesFromNative.unshift(messages)}if(message){processMessage(message)}}}};module.exports=androidExec});define("cordova/platform",function(require,exports,module){module.exports={id:"android",initialize:function(){var channel=require("cordova/channel"),cordova=require("cordova"),exec=require("cordova/exec");var backButtonChannel=cordova.addDocumentEventHandler("backbutton");backButtonChannel.onHasSubscribersChange=function(){exec(null,null,"App","overrideBackbutton",[this.numHandlers==1])};cordova.addDocumentEventHandler("menubutton");cordova.addDocumentEventHandler("searchbutton");var storage=require("cordova/plugin/android/storage");if(typeof window.openDatabase=="undefined"){window.openDatabase=storage.openDatabase}else{var originalOpenDatabase=window.openDatabase;window.openDatabase=function(name,version,desc,size){var db=null;try{db=originalOpenDatabase(name,version,desc,size)}catch(ex){if(ex.code===18){db=null}else{throw ex}}if(db===null){return storage.openDatabase(name,version,desc,size)}else{return db}}}if(typeof window.localStorage=="undefined"||window.localStorage===null){window.localStorage=new storage.CupcakeLocalStorage()}channel.join(function(){exec(null,null,"App","show",[])},[channel.onCordovaReady])},objects:{navigator:{children:{app:{path:"cordova/plugin/android/app"}}},File:{path:"cordova/plugin/File"},FileReader:{path:"cordova/plugin/FileReader"},FileError:{path:"cordova/plugin/FileError"},MediaError:{path:"cordova/plugin/MediaError"}},merges:{device:{path:"cordova/plugin/android/device"},navigator:{children:{notification:{path:"cordova/plugin/android/notification"}}}}}});define("cordova/plugin/Acceleration",function(require,exports,module){var Acceleration=function(x,y,z,timestamp){this.x=x;this.y=y;this.z=z;this.timestamp=timestamp||(new Date()).getTime()};module.exports=Acceleration});define("cordova/plugin/Camera",function(require,exports,module){var exec=require("cordova/exec"),Camera=require("cordova/plugin/CameraConstants");var cameraExport={};for(var key in Camera){cameraExport[key]=Camera[key]}cameraExport.getPicture=function(successCallback,errorCallback,options){options=options||{};if(typeof successCallback!="function"){console.log("Camera Error: successCallback is not a function");return}if(errorCallback&&(typeof errorCallback!="function")){console.log("Camera Error: errorCallback is not a function");return}var quality=50;if(typeof options.quality=="number"){quality=options.quality}else{if(typeof options.quality=="string"){var qlity=parseInt(options.quality,10);if(isNaN(qlity)===false){quality=qlity.valueOf()}}}var destinationType=Camera.DestinationType.FILE_URI;if(typeof options.destinationType=="number"){destinationType=options.destinationType}var sourceType=Camera.PictureSourceType.CAMERA;if(typeof options.sourceType=="number"){sourceType=options.sourceType}var targetWidth=-1;if(typeof options.targetWidth=="number"){targetWidth=options.targetWidth}else{if(typeof options.targetWidth=="string"){var width=parseInt(options.targetWidth,10);if(isNaN(width)===false){targetWidth=width.valueOf()}}}var targetHeight=-1;if(typeof options.targetHeight=="number"){targetHeight=options.targetHeight}else{if(typeof options.targetHeight=="string"){var height=parseInt(options.targetHeight,10);if(isNaN(height)===false){targetHeight=height.valueOf()}}}var encodingType=Camera.EncodingType.JPEG;if(typeof options.encodingType=="number"){encodingType=options.encodingType}var mediaType=Camera.MediaType.PICTURE;if(typeof options.mediaType=="number"){mediaType=options.mediaType}var allowEdit=false;if(typeof options.allowEdit=="boolean"){allowEdit=options.allowEdit}else{if(typeof options.allowEdit=="number"){allowEdit=options.allowEdit<=0?false:true}}var correctOrientation=false;if(typeof options.correctOrientation=="boolean"){correctOrientation=options.correctOrientation}else{if(typeof options.correctOrientation=="number"){correctOrientation=options.correctOrientation<=0?false:true}}var saveToPhotoAlbum=false;if(typeof options.saveToPhotoAlbum=="boolean"){saveToPhotoAlbum=options.saveToPhotoAlbum}else{if(typeof options.saveToPhotoAlbum=="number"){saveToPhotoAlbum=options.saveToPhotoAlbum<=0?false:true}}var popoverOptions=null;if(typeof options.popoverOptions=="object"){popoverOptions=options.popoverOptions}var args=[quality,destinationType,sourceType,targetWidth,targetHeight,encodingType,mediaType,allowEdit,correctOrientation,saveToPhotoAlbum,popoverOptions];exec(successCallback,errorCallback,"Camera","takePicture",args)};cameraExport.cleanup=function(successCallback,errorCallback){exec(successCallback,errorCallback,"Camera","cleanup",[])};module.exports=cameraExport});define("cordova/plugin/CameraConstants",function(require,exports,module){module.exports={DestinationType:{DATA_URL:0,FILE_URI:1},EncodingType:{JPEG:0,PNG:1},MediaType:{PICTURE:0,VIDEO:1,ALLMEDIA:2},PictureSourceType:{PHOTOLIBRARY:0,CAMERA:1,SAVEDPHOTOALBUM:2},PopoverArrowDirection:{ARROW_UP:1,ARROW_DOWN:2,ARROW_LEFT:4,ARROW_RIGHT:8,ARROW_ANY:15}}});define("cordova/plugin/CameraPopoverOptions",function(require,exports,module){var Camera=require("cordova/plugin/CameraConstants");var CameraPopoverOptions=function(x,y,width,height,arrowDir){this.x=x||0;this.y=y||32;this.width=width||320;this.height=height||480;this.arrowDir=arrowDir||Camera.PopoverArrowDirection.ARROW_ANY};module.exports=CameraPopoverOptions});define("cordova/plugin/CaptureAudioOptions",function(require,exports,module){var CaptureAudioOptions=function(){this.limit=1;this.duration=0;this.mode=null};module.exports=CaptureAudioOptions});define("cordova/plugin/CaptureError",function(require,exports,module){var CaptureError=function(c){this.code=c||null};CaptureError.CAPTURE_INTERNAL_ERR=0;CaptureError.CAPTURE_APPLICATION_BUSY=1;CaptureError.CAPTURE_INVALID_ARGUMENT=2;CaptureError.CAPTURE_NO_MEDIA_FILES=3;CaptureError.CAPTURE_NOT_SUPPORTED=20;module.exports=CaptureError});define("cordova/plugin/CaptureImageOptions",function(require,exports,module){var CaptureImageOptions=function(){this.limit=1;this.mode=null};module.exports=CaptureImageOptions});define("cordova/plugin/CaptureVideoOptions",function(require,exports,module){var CaptureVideoOptions=function(){this.limit=1;this.duration=0;this.mode=null};module.exports=CaptureVideoOptions});define("cordova/plugin/CompassError",function(require,exports,module){var CompassError=function(err){this.code=(err!==undefined?err:null)};CompassError.COMPASS_INTERNAL_ERR=0;CompassError.COMPASS_NOT_SUPPORTED=20;module.exports=CompassError});define("cordova/plugin/CompassHeading",function(require,exports,module){var CompassHeading=function(magneticHeading,trueHeading,headingAccuracy,timestamp){this.magneticHeading=(magneticHeading!==undefined?magneticHeading:null);this.trueHeading=(trueHeading!==undefined?trueHeading:null);this.headingAccuracy=(headingAccuracy!==undefined?headingAccuracy:null);this.timestamp=(timestamp!==undefined?timestamp:new Date().getTime())};module.exports=CompassHeading});define("cordova/plugin/ConfigurationData",function(require,exports,module){function ConfigurationData(){this.type=null;this.height=0;this.width=0}module.exports=ConfigurationData});define("cordova/plugin/Connection",function(require,exports,module){module.exports={UNKNOWN:"unknown",ETHERNET:"ethernet",WIFI:"wifi",CELL_2G:"2g",CELL_3G:"3g",CELL_4G:"4g",NONE:"none"}});define("cordova/plugin/Contact",function(require,exports,module){var exec=require("cordova/exec"),ContactError=require("cordova/plugin/ContactError"),utils=require("cordova/utils");function convertIn(contact){var value=contact.birthday;try{contact.birthday=new Date(parseFloat(value))}catch(exception){console.log("Cordova Contact convertIn error: exception creating date.")}return contact}function convertOut(contact){var value=contact.birthday;if(value!==null){if(!utils.isDate(value)){try{value=new Date(value)}catch(exception){value=null}}if(utils.isDate(value)){value=value.valueOf()}contact.birthday=value}return contact}var Contact=function(id,displayName,name,nickname,phoneNumbers,emails,addresses,ims,organizations,birthday,note,photos,categories,urls){this.id=id||null;this.rawId=null;this.displayName=displayName||null;this.name=name||null;this.nickname=nickname||null;this.phoneNumbers=phoneNumbers||null;this.emails=emails||null;this.addresses=addresses||null;this.ims=ims||null;this.organizations=organizations||null;this.birthday=birthday||null;this.note=note||null;this.photos=photos||null;this.categories=categories||null;this.urls=urls||null};Contact.prototype.remove=function(successCB,errorCB){var fail=function(code){errorCB(new ContactError(code))};if(this.id===null){fail(ContactError.UNKNOWN_ERROR)}else{exec(successCB,fail,"Contacts","remove",[this.id])}};Contact.prototype.clone=function(){var clonedContact=utils.clone(this);var i;clonedContact.id=null;clonedContact.rawId=null;if(clonedContact.phoneNumbers){for(i=0;i<clonedContact.phoneNumbers.length;i++){clonedContact.phoneNumbers[i].id=null}}if(clonedContact.emails){for(i=0;i<clonedContact.emails.length;i++){clonedContact.emails[i].id=null}}if(clonedContact.addresses){for(i=0;i<clonedContact.addresses.length;i++){clonedContact.addresses[i].id=null}}if(clonedContact.ims){for(i=0;i<clonedContact.ims.length;i++){clonedContact.ims[i].id=null}}if(clonedContact.organizations){for(i=0;i<clonedContact.organizations.length;i++){clonedContact.organizations[i].id=null}}if(clonedContact.categories){for(i=0;i<clonedContact.categories.length;i++){clonedContact.categories[i].id=null}}if(clonedContact.photos){for(i=0;i<clonedContact.photos.length;i++){clonedContact.photos[i].id=null}}if(clonedContact.urls){for(i=0;i<clonedContact.urls.length;i++){clonedContact.urls[i].id=null}}return clonedContact};Contact.prototype.save=function(successCB,errorCB){var fail=function(code){errorCB(new ContactError(code))};var success=function(result){if(result){if(typeof successCB==="function"){var fullContact=require("cordova/plugin/contacts").create(result);successCB(convertIn(fullContact))}}else{fail(ContactError.UNKNOWN_ERROR)}};var dupContact=convertOut(utils.clone(this));exec(success,fail,"Contacts","save",[dupContact])};module.exports=Contact});define("cordova/plugin/ContactAddress",function(require,exports,module){var ContactAddress=function(pref,type,formatted,streetAddress,locality,region,postalCode,country){this.id=null;this.pref=(typeof pref!="undefined"?pref:false);this.type=type||null;this.formatted=formatted||null;this.streetAddress=streetAddress||null;this.locality=locality||null;this.region=region||null;this.postalCode=postalCode||null;this.country=country||null};module.exports=ContactAddress});define("cordova/plugin/ContactError",function(require,exports,module){var ContactError=function(err){this.code=(typeof err!="undefined"?err:null)};ContactError.UNKNOWN_ERROR=0;ContactError.INVALID_ARGUMENT_ERROR=1;ContactError.TIMEOUT_ERROR=2;ContactError.PENDING_OPERATION_ERROR=3;ContactError.IO_ERROR=4;ContactError.NOT_SUPPORTED_ERROR=5;ContactError.PERMISSION_DENIED_ERROR=20;module.exports=ContactError});define("cordova/plugin/ContactField",function(require,exports,module){var ContactField=function(type,value,pref){this.id=null;this.type=(type&&type.toString())||null;this.value=(value&&value.toString())||null;this.pref=(typeof pref!="undefined"?pref:false)};module.exports=ContactField});define("cordova/plugin/ContactFindOptions",function(require,exports,module){var ContactFindOptions=function(filter,multiple){this.filter=filter||"";this.multiple=(typeof multiple!="undefined"?multiple:false)};module.exports=ContactFindOptions});define("cordova/plugin/ContactName",function(require,exports,module){var ContactName=function(formatted,familyName,givenName,middle,prefix,suffix){this.formatted=formatted||null;this.familyName=familyName||null;this.givenName=givenName||null;this.middleName=middle||null;this.honorificPrefix=prefix||null;this.honorificSuffix=suffix||null};module.exports=ContactName});define("cordova/plugin/ContactOrganization",function(require,exports,module){var ContactOrganization=function(pref,type,name,dept,title){this.id=null;this.pref=(typeof pref!="undefined"?pref:false);this.type=type||null;this.name=name||null;this.department=dept||null;this.title=title||null};module.exports=ContactOrganization});define("cordova/plugin/Coordinates",function(require,exports,module){var Coordinates=function(lat,lng,alt,acc,head,vel,altacc){this.latitude=lat;this.longitude=lng;this.accuracy=acc;this.altitude=(alt!==undefined?alt:null);this.heading=(head!==undefined?head:null);this.speed=(vel!==undefined?vel:null);if(this.speed===0||this.speed===null){this.heading=NaN}this.altitudeAccuracy=(altacc!==undefined)?altacc:null};module.exports=Coordinates});define("cordova/plugin/DirectoryEntry",function(require,exports,module){var utils=require("cordova/utils"),exec=require("cordova/exec"),Entry=require("cordova/plugin/Entry"),FileError=require("cordova/plugin/FileError"),DirectoryReader=require("cordova/plugin/DirectoryReader");var DirectoryEntry=function(name,fullPath){DirectoryEntry.__super__.constructor.apply(this,[false,true,name,fullPath])};utils.extend(DirectoryEntry,Entry);DirectoryEntry.prototype.createReader=function(){return new DirectoryReader(this.fullPath)};DirectoryEntry.prototype.getDirectory=function(path,options,successCallback,errorCallback){var win=typeof successCallback!=="function"?null:function(result){var entry=new DirectoryEntry(result.name,result.fullPath);successCallback(entry)};var fail=typeof errorCallback!=="function"?null:function(code){errorCallback(new FileError(code))};exec(win,fail,"File","getDirectory",[this.fullPath,path,options])};DirectoryEntry.prototype.removeRecursively=function(successCallback,errorCallback){var fail=typeof errorCallback!=="function"?null:function(code){errorCallback(new FileError(code))};exec(successCallback,fail,"File","removeRecursively",[this.fullPath])};DirectoryEntry.prototype.getFile=function(path,options,successCallback,errorCallback){var win=typeof successCallback!=="function"?null:function(result){var FileEntry=require("cordova/plugin/FileEntry");var entry=new FileEntry(result.name,result.fullPath);successCallback(entry)};var fail=typeof errorCallback!=="function"?null:function(code){errorCallback(new FileError(code))};exec(win,fail,"File","getFile",[this.fullPath,path,options])};module.exports=DirectoryEntry});define("cordova/plugin/DirectoryReader",function(require,exports,module){var exec=require("cordova/exec"),FileError=require("cordova/plugin/FileError");function DirectoryReader(path){this.path=path||null}DirectoryReader.prototype.readEntries=function(successCallback,errorCallback){var win=typeof successCallback!=="function"?null:function(result){var retVal=[];for(var i=0;i<result.length;i++){var entry=null;if(result[i].isDirectory){entry=new (require("cordova/plugin/DirectoryEntry"))()}else{if(result[i].isFile){entry=new (require("cordova/plugin/FileEntry"))()}}entry.isDirectory=result[i].isDirectory;entry.isFile=result[i].isFile;entry.name=result[i].name;entry.fullPath=result[i].fullPath;retVal.push(entry)}successCallback(retVal)};var fail=typeof errorCallback!=="function"?null:function(code){errorCallback(new FileError(code))};exec(win,fail,"File","readEntries",[this.path])};module.exports=DirectoryReader});define("cordova/plugin/Entry",function(require,exports,module){var exec=require("cordova/exec"),FileError=require("cordova/plugin/FileError"),Metadata=require("cordova/plugin/Metadata");function Entry(isFile,isDirectory,name,fullPath,fileSystem){this.isFile=(typeof isFile!="undefined"?isFile:false);this.isDirectory=(typeof isDirectory!="undefined"?isDirectory:false);this.name=name||"";this.fullPath=fullPath||"";this.filesystem=fileSystem||null}Entry.prototype.getMetadata=function(successCallback,errorCallback){var success=typeof successCallback!=="function"?null:function(lastModified){var metadata=new Metadata(lastModified);successCallback(metadata)};var fail=typeof errorCallback!=="function"?null:function(code){errorCallback(new FileError(code))};exec(success,fail,"File","getMetadata",[this.fullPath])};Entry.prototype.setMetadata=function(successCallback,errorCallback,metadataObject){exec(successCallback,errorCallback,"File","setMetadata",[this.fullPath,metadataObject])};Entry.prototype.moveTo=function(parent,newName,successCallback,errorCallback){var fail=function(code){if(typeof errorCallback==="function"){errorCallback(new FileError(code))}};if(!parent){fail(FileError.NOT_FOUND_ERR);return}var srcPath=this.fullPath,name=newName||this.name,success=function(entry){if(entry){if(typeof successCallback==="function"){var result=(entry.isDirectory)?new (require("cordova/plugin/DirectoryEntry"))(entry.name,entry.fullPath):new (require("cordova/plugin/FileEntry"))(entry.name,entry.fullPath);try{successCallback(result)}catch(e){console.log("Error invoking callback: "+e)}}}else{fail(FileError.NOT_FOUND_ERR)}};exec(success,fail,"File","moveTo",[srcPath,parent.fullPath,name])};Entry.prototype.copyTo=function(parent,newName,successCallback,errorCallback){var fail=function(code){if(typeof errorCallback==="function"){errorCallback(new FileError(code))}};if(!parent){fail(FileError.NOT_FOUND_ERR);return}var srcPath=this.fullPath,name=newName||this.name,success=function(entry){if(entry){if(typeof successCallback==="function"){var result=(entry.isDirectory)?new (require("cordova/plugin/DirectoryEntry"))(entry.name,entry.fullPath):new (require("cordova/plugin/FileEntry"))(entry.name,entry.fullPath);try{successCallback(result)}catch(e){console.log("Error invoking callback: "+e)}}}else{fail(FileError.NOT_FOUND_ERR)}};exec(success,fail,"File","copyTo",[srcPath,parent.fullPath,name])};Entry.prototype.toURL=function(){return this.fullPath};Entry.prototype.toURI=function(mimeType){console.log("DEPRECATED: Update your code to use 'toURL'");return this.toURL()};Entry.prototype.remove=function(successCallback,errorCallback){var fail=typeof errorCallback!=="function"?null:function(code){errorCallback(new FileError(code))};exec(successCallback,fail,"File","remove",[this.fullPath])};Entry.prototype.getParent=function(successCallback,errorCallback){var win=typeof successCallback!=="function"?null:function(result){var DirectoryEntry=require("cordova/plugin/DirectoryEntry");var entry=new DirectoryEntry(result.name,result.fullPath);successCallback(entry)};var fail=typeof errorCallback!=="function"?null:function(code){errorCallback(new FileError(code))};exec(win,fail,"File","getParent",[this.fullPath])};module.exports=Entry});define("cordova/plugin/File",function(require,exports,module){var File=function(name,fullPath,type,lastModifiedDate,size){this.name=name||"";this.fullPath=fullPath||null;this.type=type||null;this.lastModifiedDate=lastModifiedDate||null;this.size=size||0};module.exports=File});define("cordova/plugin/FileEntry",function(require,exports,module){var utils=require("cordova/utils"),exec=require("cordova/exec"),Entry=require("cordova/plugin/Entry"),FileWriter=require("cordova/plugin/FileWriter"),File=require("cordova/plugin/File"),FileError=require("cordova/plugin/FileError");var FileEntry=function(name,fullPath){FileEntry.__super__.constructor.apply(this,[true,false,name,fullPath])};utils.extend(FileEntry,Entry);FileEntry.prototype.createWriter=function(successCallback,errorCallback){this.file(function(filePointer){var writer=new FileWriter(filePointer);if(writer.fileName===null||writer.fileName===""){if(typeof errorCallback==="function"){errorCallback(new FileError(FileError.INVALID_STATE_ERR))}}else{if(typeof successCallback==="function"){successCallback(writer)}}},errorCallback)};FileEntry.prototype.file=function(successCallback,errorCallback){var win=typeof successCallback!=="function"?null:function(f){var file=new File(f.name,f.fullPath,f.type,f.lastModifiedDate,f.size);successCallback(file)};var fail=typeof errorCallback!=="function"?null:function(code){errorCallback(new FileError(code))};exec(win,fail,"File","getFileMetadata",[this.fullPath])};module.exports=FileEntry});define("cordova/plugin/FileError",function(require,exports,module){function FileError(error){this.code=error||null}FileError.NOT_FOUND_ERR=1;FileError.SECURITY_ERR=2;FileError.ABORT_ERR=3;FileError.NOT_READABLE_ERR=4;FileError.ENCODING_ERR=5;FileError.NO_MODIFICATION_ALLOWED_ERR=6;FileError.INVALID_STATE_ERR=7;FileError.SYNTAX_ERR=8;FileError.INVALID_MODIFICATION_ERR=9;FileError.QUOTA_EXCEEDED_ERR=10;FileError.TYPE_MISMATCH_ERR=11;FileError.PATH_EXISTS_ERR=12;module.exports=FileError});define("cordova/plugin/FileReader",function(require,exports,module){var exec=require("cordova/exec"),FileError=require("cordova/plugin/FileError"),ProgressEvent=require("cordova/plugin/ProgressEvent");var FileReader=function(){this.fileName="";this.readyState=0;this.result=null;this.error=null;this.onloadstart=null;this.onprogress=null;this.onload=null;this.onerror=null;this.onloadend=null;this.onabort=null};FileReader.EMPTY=0;FileReader.LOADING=1;FileReader.DONE=2;FileReader.prototype.abort=function(){this.result=null;if(this.readyState==FileReader.DONE||this.readyState==FileReader.EMPTY){return}this.readyState=FileReader.DONE;if(typeof this.onabort==="function"){this.onabort(new ProgressEvent("abort",{target:this}))}if(typeof this.onloadend==="function"){this.onloadend(new ProgressEvent("loadend",{target:this}))}};FileReader.prototype.readAsText=function(file,encoding){this.fileName="";if(typeof file.fullPath==="undefined"){this.fileName=file}else{this.fileName=file.fullPath}if(this.readyState==FileReader.LOADING){throw new FileError(FileError.INVALID_STATE_ERR)}this.readyState=FileReader.LOADING;if(typeof this.onloadstart==="function"){this.onloadstart(new ProgressEvent("loadstart",{target:this}))}var enc=encoding?encoding:"UTF-8";var me=this;exec(function(r){if(me.readyState===FileReader.DONE){return}me.result=r;if(typeof me.onload==="function"){me.onload(new ProgressEvent("load",{target:me}))}me.readyState=FileReader.DONE;if(typeof me.onloadend==="function"){me.onloadend(new ProgressEvent("loadend",{target:me}))}},function(e){if(me.readyState===FileReader.DONE){return}me.readyState=FileReader.DONE;me.result=null;me.error=new FileError(e);if(typeof me.onerror==="function"){me.onerror(new ProgressEvent("error",{target:me}))}if(typeof me.onloadend==="function"){me.onloadend(new ProgressEvent("loadend",{target:me}))}},"File","readAsText",[this.fileName,enc])};FileReader.prototype.readAsDataURL=function(file){this.fileName="";if(typeof file.fullPath==="undefined"){this.fileName=file}else{this.fileName=file.fullPath}if(this.readyState==FileReader.LOADING){throw new FileError(FileError.INVALID_STATE_ERR)}this.readyState=FileReader.LOADING;if(typeof this.onloadstart==="function"){this.onloadstart(new ProgressEvent("loadstart",{target:this}))}var me=this;exec(function(r){if(me.readyState===FileReader.DONE){return}me.readyState=FileReader.DONE;me.result=r;if(typeof me.onload==="function"){me.onload(new ProgressEvent("load",{target:me}))}if(typeof me.onloadend==="function"){me.onloadend(new ProgressEvent("loadend",{target:me}))}},function(e){if(me.readyState===FileReader.DONE){return}me.readyState=FileReader.DONE;me.result=null;me.error=new FileError(e);if(typeof me.onerror==="function"){me.onerror(new ProgressEvent("error",{target:me}))}if(typeof me.onloadend==="function"){me.onloadend(new ProgressEvent("loadend",{target:me}))}},"File","readAsDataURL",[this.fileName])};FileReader.prototype.readAsBinaryString=function(file){console.log('method "readAsBinaryString" is not supported at this time.')};FileReader.prototype.readAsArrayBuffer=function(file){console.log("This method is not supported at this time.")};module.exports=FileReader});define("cordova/plugin/FileSystem",function(require,exports,module){var DirectoryEntry=require("cordova/plugin/DirectoryEntry");var FileSystem=function(name,root){this.name=name||null;if(root){this.root=new DirectoryEntry(root.name,root.fullPath)}};module.exports=FileSystem});define("cordova/plugin/FileTransfer",function(require,exports,module){var exec=require("cordova/exec"),FileTransferError=require("cordova/plugin/FileTransferError"),ProgressEvent=require("cordova/plugin/ProgressEvent");function newProgressEvent(result){var pe=new ProgressEvent();pe.lengthComputable=result.lengthComputable;pe.loaded=result.loaded;pe.total=result.total;return pe}var idCounter=0;var FileTransfer=function(){this._id=++idCounter;this.onprogress=null};FileTransfer.prototype.upload=function(filePath,server,successCallback,errorCallback,options,trustAllHosts){if(!filePath||!server){throw new Error("FileTransfer.upload requires filePath and server URL parameters at the minimum.")}var fileKey=null;var fileName=null;var mimeType=null;var params=null;var chunkedMode=true;var headers=null;if(options){fileKey=options.fileKey;fileName=options.fileName;mimeType=options.mimeType;headers=options.headers;if(options.chunkedMode!==null||typeof options.chunkedMode!="undefined"){chunkedMode=options.chunkedMode}if(options.params){params=options.params}else{params={}}}var fail=function(e){var error=new FileTransferError(e.code,e.source,e.target,e.http_status);errorCallback(error)};var self=this;var win=function(result){if(typeof result.lengthComputable!="undefined"){if(self.onprogress){return self.onprogress(newProgressEvent(result))}}else{return successCallback(result)}};exec(win,fail,"FileTransfer","upload",[filePath,server,fileKey,fileName,mimeType,params,trustAllHosts,chunkedMode,headers,this._id])};FileTransfer.prototype.download=function(source,target,successCallback,errorCallback,trustAllHosts){if(!source||!target){throw new Error("FileTransfer.download requires source URI and target URI parameters at the minimum.")}var self=this;var win=function(result){if(typeof result.lengthComputable!="undefined"){if(self.onprogress){return self.onprogress(newProgressEvent(result))}}else{var entry=null;if(result.isDirectory){entry=new (require("cordova/plugin/DirectoryEntry"))()}else{if(result.isFile){entry=new (require("cordova/plugin/FileEntry"))()}}entry.isDirectory=result.isDirectory;entry.isFile=result.isFile;entry.name=result.name;entry.fullPath=result.fullPath;successCallback(entry)}};var fail=function(e){var error=new FileTransferError(e.code,e.source,e.target,e.http_status);errorCallback(error)};exec(win,fail,"FileTransfer","download",[source,target,trustAllHosts,this._id])};FileTransfer.prototype.abort=function(successCallback,errorCallback){exec(successCallback,errorCallback,"FileTransfer","abort",[this._id])};module.exports=FileTransfer});define("cordova/plugin/FileTransferError",function(require,exports,module){var FileTransferError=function(code,source,target,status){this.code=code||null;this.source=source||null;this.target=target||null;this.http_status=status||null};FileTransferError.FILE_NOT_FOUND_ERR=1;FileTransferError.INVALID_URL_ERR=2;FileTransferError.CONNECTION_ERR=3;FileTransferError.ABORT_ERR=4;module.exports=FileTransferError});define("cordova/plugin/FileUploadOptions",function(require,exports,module){var FileUploadOptions=function(fileKey,fileName,mimeType,params,headers){this.fileKey=fileKey||null;this.fileName=fileName||null;this.mimeType=mimeType||null;this.params=params||null;this.headers=headers||null};module.exports=FileUploadOptions});define("cordova/plugin/FileUploadResult",function(require,exports,module){var FileUploadResult=function(){this.bytesSent=0;this.responseCode=null;this.response=null};module.exports=FileUploadResult});define("cordova/plugin/FileWriter",function(require,exports,module){var exec=require("cordova/exec"),FileError=require("cordova/plugin/FileError"),ProgressEvent=require("cordova/plugin/ProgressEvent");var FileWriter=function(file){this.fileName="";this.length=0;if(file){this.fileName=file.fullPath||file;this.length=file.size||0}this.position=0;this.readyState=0;this.result=null;this.error=null;this.onwritestart=null;this.onprogress=null;this.onwrite=null;this.onwriteend=null;this.onabort=null;this.onerror=null};FileWriter.INIT=0;FileWriter.WRITING=1;FileWriter.DONE=2;FileWriter.prototype.abort=function(){if(this.readyState===FileWriter.DONE||this.readyState===FileWriter.INIT){throw new FileError(FileError.INVALID_STATE_ERR)}this.error=new FileError(FileError.ABORT_ERR);this.readyState=FileWriter.DONE;if(typeof this.onabort==="function"){this.onabort(new ProgressEvent("abort",{target:this}))}if(typeof this.onwriteend==="function"){this.onwriteend(new ProgressEvent("writeend",{target:this}))}};FileWriter.prototype.write=function(text){if(this.readyState===FileWriter.WRITING){throw new FileError(FileError.INVALID_STATE_ERR)}this.readyState=FileWriter.WRITING;var me=this;if(typeof me.onwritestart==="function"){me.onwritestart(new ProgressEvent("writestart",{target:me}))}exec(function(r){if(me.readyState===FileWriter.DONE){return}me.position+=r;me.length=me.position;me.readyState=FileWriter.DONE;if(typeof me.onwrite==="function"){me.onwrite(new ProgressEvent("write",{target:me}))}if(typeof me.onwriteend==="function"){me.onwriteend(new ProgressEvent("writeend",{target:me}))}},function(e){if(me.readyState===FileWriter.DONE){return}me.readyState=FileWriter.DONE;me.error=new FileError(e);if(typeof me.onerror==="function"){me.onerror(new ProgressEvent("error",{target:me}))}if(typeof me.onwriteend==="function"){me.onwriteend(new ProgressEvent("writeend",{target:me}))}},"File","write",[this.fileName,text,this.position])};FileWriter.prototype.seek=function(offset){if(this.readyState===FileWriter.WRITING){throw new FileError(FileError.INVALID_STATE_ERR)}if(!offset&&offset!==0){return}if(offset<0){this.position=Math.max(offset+this.length,0)}else{if(offset>this.length){this.position=this.length}else{this.position=offset}}};FileWriter.prototype.truncate=function(size){if(this.readyState===FileWriter.WRITING){throw new FileError(FileError.INVALID_STATE_ERR)}this.readyState=FileWriter.WRITING;var me=this;if(typeof me.onwritestart==="function"){me.onwritestart(new ProgressEvent("writestart",{target:this}))}exec(function(r){if(me.readyState===FileWriter.DONE){return}me.readyState=FileWriter.DONE;me.length=r;me.position=Math.min(me.position,r);if(typeof me.onwrite==="function"){me.onwrite(new ProgressEvent("write",{target:me}))}if(typeof me.onwriteend==="function"){me.onwriteend(new ProgressEvent("writeend",{target:me}))}},function(e){if(me.readyState===FileWriter.DONE){return}me.readyState=FileWriter.DONE;me.error=new FileError(e);if(typeof me.onerror==="function"){me.onerror(new ProgressEvent("error",{target:me}))}if(typeof me.onwriteend==="function"){me.onwriteend(new ProgressEvent("writeend",{target:me}))}},"File","truncate",[this.fileName,size])};module.exports=FileWriter});define("cordova/plugin/Flags",function(require,exports,module){function Flags(create,exclusive){this.create=create||false;this.exclusive=exclusive||false}module.exports=Flags});define("cordova/plugin/GlobalizationError",function(require,exports,module){var GlobalizationError=function(code,message){this.code=code||null;this.message=message||""};GlobalizationError.UNKNOWN_ERROR=0;GlobalizationError.FORMATTING_ERROR=1;GlobalizationError.PARSING_ERROR=2;GlobalizationError.PATTERN_ERROR=3;module.exports=GlobalizationError});define("cordova/plugin/LocalFileSystem",function(require,exports,module){var exec=require("cordova/exec");var LocalFileSystem=function(){};LocalFileSystem.TEMPORARY=0;LocalFileSystem.PERSISTENT=1;module.exports=LocalFileSystem});define("cordova/plugin/Media",function(require,exports,module){var utils=require("cordova/utils"),exec=require("cordova/exec");var mediaObjects={};var Media=function(src,successCallback,errorCallback,statusCallback){if(successCallback&&(typeof successCallback!=="function")){console.log("Media Error: successCallback is not a function");return}if(errorCallback&&(typeof errorCallback!=="function")){console.log("Media Error: errorCallback is not a function");return}if(statusCallback&&(typeof statusCallback!=="function")){console.log("Media Error: statusCallback is not a function");return}this.id=utils.createUUID();mediaObjects[this.id]=this;this.src=src;this.successCallback=successCallback;this.errorCallback=errorCallback;this.statusCallback=statusCallback;this._duration=-1;this._position=-1;exec(null,this.errorCallback,"Media","create",[this.id,this.src])};Media.MEDIA_STATE=1;Media.MEDIA_DURATION=2;Media.MEDIA_POSITION=3;Media.MEDIA_ERROR=9;Media.MEDIA_NONE=0;Media.MEDIA_STARTING=1;Media.MEDIA_RUNNING=2;Media.MEDIA_PAUSED=3;Media.MEDIA_STOPPED=4;Media.MEDIA_MSG=["None","Starting","Running","Paused","Stopped"];Media.get=function(id){return mediaObjects[id]};Media.prototype.play=function(options){exec(null,null,"Media","startPlayingAudio",[this.id,this.src,options])};Media.prototype.stop=function(){var me=this;exec(function(){me._position=0},this.errorCallback,"Media","stopPlayingAudio",[this.id])};Media.prototype.seekTo=function(milliseconds){var me=this;exec(function(p){me._position=p},this.errorCallback,"Media","seekToAudio",[this.id,milliseconds])};Media.prototype.pause=function(){exec(null,this.errorCallback,"Media","pausePlayingAudio",[this.id])};Media.prototype.getDuration=function(){return this._duration};Media.prototype.getCurrentPosition=function(success,fail){var me=this;exec(function(p){me._position=p;success(p)},fail,"Media","getCurrentPositionAudio",[this.id])};Media.prototype.startRecord=function(){exec(null,this.errorCallback,"Media","startRecordingAudio",[this.id,this.src])};Media.prototype.stopRecord=function(){exec(null,this.errorCallback,"Media","stopRecordingAudio",[this.id])};Media.prototype.release=function(){exec(null,this.errorCallback,"Media","release",[this.id])};Media.prototype.setVolume=function(volume){exec(null,null,"Media","setVolume",[this.id,volume])};Media.onStatus=function(id,msgType,value){var media=mediaObjects[id];if(media){switch(msgType){case Media.MEDIA_STATE:media.statusCallback&&media.statusCallback(value);if(value==Media.MEDIA_STOPPED){media.successCallback&&media.successCallback()}break;case Media.MEDIA_DURATION:media._duration=value;break;case Media.MEDIA_ERROR:media.errorCallback&&media.errorCallback(value);break;case Media.MEDIA_POSITION:media._position=Number(value);break;default:console&&console.error&&console.error("Unhandled Media.onStatus :: "+msgType);break}}else{console&&console.error&&console.error("Received Media.onStatus callback for unknown media :: "+id)}};module.exports=Media});define("cordova/plugin/MediaError",function(require,exports,module){var _MediaError=window.MediaError;if(!_MediaError){window.MediaError=_MediaError=function(code,msg){this.code=(typeof code!="undefined")?code:null;this.message=msg||""}}_MediaError.MEDIA_ERR_NONE_ACTIVE=_MediaError.MEDIA_ERR_NONE_ACTIVE||0;_MediaError.MEDIA_ERR_ABORTED=_MediaError.MEDIA_ERR_ABORTED||1;_MediaError.MEDIA_ERR_NETWORK=_MediaError.MEDIA_ERR_NETWORK||2;_MediaError.MEDIA_ERR_DECODE=_MediaError.MEDIA_ERR_DECODE||3;_MediaError.MEDIA_ERR_NONE_SUPPORTED=_MediaError.MEDIA_ERR_NONE_SUPPORTED||4;_MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED=_MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED||4;module.exports=_MediaError});define("cordova/plugin/MediaFile",function(require,exports,module){var utils=require("cordova/utils"),exec=require("cordova/exec"),File=require("cordova/plugin/File"),CaptureError=require("cordova/plugin/CaptureError");var MediaFile=function(name,fullPath,type,lastModifiedDate,size){MediaFile.__super__.constructor.apply(this,arguments)};utils.extend(MediaFile,File);MediaFile.prototype.getFormatData=function(successCallback,errorCallback){if(typeof this.fullPath==="undefined"||this.fullPath===null){errorCallback(new CaptureError(CaptureError.CAPTURE_INVALID_ARGUMENT))}else{exec(successCallback,errorCallback,"Capture","getFormatData",[this.fullPath,this.type])}};module.exports=MediaFile});define("cordova/plugin/MediaFileData",function(require,exports,module){var MediaFileData=function(codecs,bitrate,height,width,duration){this.codecs=codecs||null;this.bitrate=bitrate||0;this.height=height||0;this.width=width||0;this.duration=duration||0};module.exports=MediaFileData});define("cordova/plugin/Metadata",function(require,exports,module){var Metadata=function(time){this.modificationTime=(typeof time!="undefined"?new Date(time):null)};module.exports=Metadata});define("cordova/plugin/Position",function(require,exports,module){var Coordinates=require("cordova/plugin/Coordinates");var Position=function(coords,timestamp){if(coords){this.coords=new Coordinates(coords.latitude,coords.longitude,coords.altitude,coords.accuracy,coords.heading,coords.velocity,coords.altitudeAccuracy)}else{this.coords=new Coordinates()}this.timestamp=(timestamp!==undefined)?timestamp:new Date()};module.exports=Position});define("cordova/plugin/PositionError",function(require,exports,module){var PositionError=function(code,message){this.code=code||null;this.message=message||""};PositionError.PERMISSION_DENIED=1;PositionError.POSITION_UNAVAILABLE=2;PositionError.TIMEOUT=3;module.exports=PositionError});define("cordova/plugin/ProgressEvent",function(require,exports,module){var ProgressEvent=(function(){return function ProgressEvent(type,dict){this.type=type;this.bubbles=false;this.cancelBubble=false;this.cancelable=false;this.lengthComputable=false;this.loaded=dict&&dict.loaded?dict.loaded:0;this.total=dict&&dict.total?dict.total:0;this.target=dict&&dict.target?dict.target:null}})();module.exports=ProgressEvent});define("cordova/plugin/accelerometer",function(require,exports,module){var utils=require("cordova/utils"),exec=require("cordova/exec"),Acceleration=require("cordova/plugin/Acceleration");var running=false;var timers={};var listeners=[];var accel=null;function start(){exec(function(a){var tempListeners=listeners.slice(0);accel=new Acceleration(a.x,a.y,a.z,a.timestamp);for(var i=0,l=tempListeners.length;i<l;i++){tempListeners[i].win(accel)}},function(e){var tempListeners=listeners.slice(0);for(var i=0,l=tempListeners.length;i<l;i++){tempListeners[i].fail(e)}},"Accelerometer","start",[]);running=true}function stop(){exec(null,null,"Accelerometer","stop",[]);running=false}function createCallbackPair(win,fail){return{win:win,fail:fail}}function removeListeners(l){var idx=listeners.indexOf(l);if(idx>-1){listeners.splice(idx,1);if(listeners.length===0){stop()}}}var accelerometer={getCurrentAcceleration:function(successCallback,errorCallback,options){if(typeof successCallback!=="function"){throw"getCurrentAcceleration must be called with at least a success callback function as first parameter."}var p;var win=function(a){removeListeners(p);successCallback(a)};var fail=function(e){removeListeners(p);errorCallback(e)};p=createCallbackPair(win,fail);listeners.push(p);if(!running){start()}},watchAcceleration:function(successCallback,errorCallback,options){var frequency=(options&&options.frequency&&typeof options.frequency=="number")?options.frequency:10000;if(typeof successCallback!=="function"){throw"watchAcceleration must be called with at least a success callback function as first parameter."}var id=utils.createUUID();var p=createCallbackPair(function(){},function(e){removeListeners(p);errorCallback(e)});listeners.push(p);timers[id]={timer:window.setInterval(function(){if(accel){successCallback(accel)}},frequency),listeners:p};if(running){if(accel){successCallback(accel)}}else{start()}return id},clearWatch:function(id){if(id&&timers[id]){window.clearInterval(timers[id].timer);removeListeners(timers[id].listeners);delete timers[id]}}};module.exports=accelerometer});define("cordova/plugin/android/app",function(require,exports,module){var exec=require("cordova/exec");module.exports={clearCache:function(){exec(null,null,"App","clearCache",[])},loadUrl:function(url,props){exec(null,null,"App","loadUrl",[url,props])},cancelLoadUrl:function(){exec(null,null,"App","cancelLoadUrl",[])},clearHistory:function(){exec(null,null,"App","clearHistory",[])},backHistory:function(){exec(null,null,"App","backHistory",[])},overrideBackbutton:function(override){exec(null,null,"App","overrideBackbutton",[override])},exitApp:function(){return exec(null,null,"App","exitApp",[])}}});define("cordova/plugin/android/device",function(require,exports,module){var channel=require("cordova/channel"),utils=require("cordova/utils"),exec=require("cordova/exec"),app=require("cordova/plugin/android/app");module.exports={overrideBackButton:function(){console.log("Device.overrideBackButton() is deprecated.  Use App.overrideBackbutton(true).");app.overrideBackbutton(true)},resetBackButton:function(){console.log("Device.resetBackButton() is deprecated.  Use App.overrideBackbutton(false).");app.overrideBackbutton(false)},exitApp:function(){console.log("Device.exitApp() is deprecated.  Use App.exitApp().");app.exitApp()}}});define("cordova/plugin/android/nativeapiprovider",function(require,exports,module){var nativeApi=this._cordovaNative||require("cordova/plugin/android/promptbasednativeapi");var currentApi=nativeApi;module.exports={get:function(){return currentApi},setPreferPrompt:function(value){currentApi=value?require("cordova/plugin/android/promptbasednativeapi"):nativeApi},set:function(value){currentApi=value}}});define("cordova/plugin/android/notification",function(require,exports,module){var exec=require("cordova/exec");module.exports={activityStart:function(title,message){if(typeof title==="undefined"&&typeof message=="undefined"){title="Busy";message="Please wait..."}exec(null,null,"Notification","activityStart",[title,message])},activityStop:function(){exec(null,null,"Notification","activityStop",[])},progressStart:function(title,message){exec(null,null,"Notification","progressStart",[title,message])},progressStop:function(){exec(null,null,"Notification","progressStop",[])},progressValue:function(value){exec(null,null,"Notification","progressValue",[value])}}});define("cordova/plugin/android/promptbasednativeapi",function(require,exports,module){module.exports={exec:function(service,action,callbackId,argsJson){return prompt(argsJson,"gap:"+JSON.stringify([service,action,callbackId]))},setNativeToJsBridgeMode:function(value){prompt(value,"gap_bridge_mode:")},retrieveJsMessages:function(){return prompt("","gap_poll:")}}});define("cordova/plugin/android/storage",function(require,exports,module){var utils=require("cordova/utils"),exec=require("cordova/exec"),channel=require("cordova/channel");var queryQueue={};var DroidDB_Rows=function(){this.resultSet=[];this.length=0};DroidDB_Rows.prototype.item=function(row){return this.resultSet[row]};var DroidDB_Result=function(){this.rows=new DroidDB_Rows()};function completeQuery(id,data){var query=queryQueue[id];if(query){try{delete queryQueue[id];var tx=query.tx;if(tx&&tx.queryList[id]){var r=new DroidDB_Result();r.rows.resultSet=data;r.rows.length=data.length;try{if(typeof query.successCallback==="function"){query.successCallback(query.tx,r)}}catch(ex){console.log("executeSql error calling user success callback: "+ex)}tx.queryComplete(id)}}catch(e){console.log("executeSql error: "+e)}}}function failQuery(reason,id){var query=queryQueue[id];if(query){try{delete queryQueue[id];var tx=query.tx;if(tx&&tx.queryList[id]){tx.queryList={};try{if(typeof query.errorCallback==="function"){query.errorCallback(query.tx,reason)}}catch(ex){console.log("executeSql error calling user error callback: "+ex)}tx.queryFailed(id,reason)}}catch(e){console.log("executeSql error: "+e)}}}var DroidDB_Query=function(tx){this.id=utils.createUUID();queryQueue[this.id]=this;this.resultSet=[];this.tx=tx;this.tx.queryList[this.id]=this;this.successCallback=null;this.errorCallback=null};var DroidDB_Tx=function(){this.id=utils.createUUID();this.successCallback=null;this.errorCallback=null;this.queryList={}};DroidDB_Tx.prototype.queryComplete=function(id){delete this.queryList[id];if(this.successCallback){var count=0;var i;for(i in this.queryList){if(this.queryList.hasOwnProperty(i)){count++}}if(count===0){try{this.successCallback()}catch(e){console.log("Transaction error calling user success callback: "+e)}}}};DroidDB_Tx.prototype.queryFailed=function(id,reason){this.queryList={};if(this.errorCallback){try{this.errorCallback(reason)}catch(e){console.log("Transaction error calling user error callback: "+e)}}};DroidDB_Tx.prototype.executeSql=function(sql,params,successCallback,errorCallback){if(typeof params==="undefined"){params=[]}var query=new DroidDB_Query(this);queryQueue[query.id]=query;query.successCallback=successCallback;query.errorCallback=errorCallback;exec(null,null,"Storage","executeSql",[sql,params,query.id])};var DatabaseShell=function(){};DatabaseShell.prototype.transaction=function(process,errorCallback,successCallback){var tx=new DroidDB_Tx();tx.successCallback=successCallback;tx.errorCallback=errorCallback;try{process(tx)}catch(e){console.log("Transaction error: "+e);if(tx.errorCallback){try{tx.errorCallback(e)}catch(ex){console.log("Transaction error calling user error callback: "+e)}}}};var DroidDB_openDatabase=function(name,version,display_name,size){exec(null,null,"Storage","openDatabase",[name,version,display_name,size]);var db=new DatabaseShell();return db};var CupcakeLocalStorage=function(){channel.waitForInitialization("cupcakeStorage");try{this.db=openDatabase("localStorage","1.0","localStorage",2621440);var storage={};this.length=0;function setLength(length){this.length=length;localStorage.length=length}this.db.transaction(function(transaction){var i;transaction.executeSql("CREATE TABLE IF NOT EXISTS storage (id NVARCHAR(40) PRIMARY KEY, body NVARCHAR(255))");transaction.executeSql("SELECT * FROM storage",[],function(tx,result){for(var i=0;i<result.rows.length;i++){storage[result.rows.item(i).id]=result.rows.item(i).body}setLength(result.rows.length);channel.initializationComplete("cupcakeStorage")})},function(err){utils.alert(err.message)});this.setItem=function(key,val){if(typeof(storage[key])=="undefined"){this.length++}storage[key]=val;this.db.transaction(function(transaction){transaction.executeSql("CREATE TABLE IF NOT EXISTS storage (id NVARCHAR(40) PRIMARY KEY, body NVARCHAR(255))");transaction.executeSql("REPLACE INTO storage (id, body) values(?,?)",[key,val])})};this.getItem=function(key){return storage[key]};this.removeItem=function(key){delete storage[key];this.length--;this.db.transaction(function(transaction){transaction.executeSql("CREATE TABLE IF NOT EXISTS storage (id NVARCHAR(40) PRIMARY KEY, body NVARCHAR(255))");transaction.executeSql("DELETE FROM storage where id=?",[key])})};this.clear=function(){storage={};this.length=0;this.db.transaction(function(transaction){transaction.executeSql("CREATE TABLE IF NOT EXISTS storage (id NVARCHAR(40) PRIMARY KEY, body NVARCHAR(255))");transaction.executeSql("DELETE FROM storage",[])})};this.key=function(index){var i=0;for(var j in storage){if(i==index){return j}else{i++}}return null}}catch(e){utils.alert("Database error "+e+".");return}};module.exports={openDatabase:DroidDB_openDatabase,CupcakeLocalStorage:CupcakeLocalStorage,failQuery:failQuery,completeQuery:completeQuery}});define("cordova/plugin/battery",function(require,exports,module){var cordova=require("cordova"),exec=require("cordova/exec");function handlers(){return battery.channels.batterystatus.numHandlers+battery.channels.batterylow.numHandlers+battery.channels.batterycritical.numHandlers}var Battery=function(){this._level=null;this._isPlugged=null;this.channels={batterystatus:cordova.addWindowEventHandler("batterystatus"),batterylow:cordova.addWindowEventHandler("batterylow"),batterycritical:cordova.addWindowEventHandler("batterycritical")};for(var key in this.channels){this.channels[key].onHasSubscribersChange=Battery.onHasSubscribersChange}};Battery.onHasSubscribersChange=function(){if(this.numHandlers===1&&handlers()===1){exec(battery._status,battery._error,"Battery","start",[])}else{if(handlers()===0){exec(null,null,"Battery","stop",[])}}};Battery.prototype._status=function(info){if(info){var me=battery;var level=info.level;if(me._level!==level||me._isPlugged!==info.isPlugged){cordova.fireWindowEvent("batterystatus",info);if(level===20||level===5){if(level===20){cordova.fireWindowEvent("batterylow",info)}else{cordova.fireWindowEvent("batterycritical",info)}}}me._level=level;me._isPlugged=info.isPlugged}};Battery.prototype._error=function(e){console.log("Error initializing Battery: "+e)};var battery=new Battery();module.exports=battery});define("cordova/plugin/capture",function(require,exports,module){var exec=require("cordova/exec"),MediaFile=require("cordova/plugin/MediaFile");function _capture(type,successCallback,errorCallback,options){var win=function(pluginResult){var mediaFiles=[];var i;for(i=0;i<pluginResult.length;i++){var mediaFile=new MediaFile();mediaFile.name=pluginResult[i].name;mediaFile.fullPath=pluginResult[i].fullPath;mediaFile.type=pluginResult[i].type;mediaFile.lastModifiedDate=pluginResult[i].lastModifiedDate;mediaFile.size=pluginResult[i].size;mediaFiles.push(mediaFile)}successCallback(mediaFiles)};exec(win,errorCallback,"Capture",type,[options])}function Capture(){this.supportedAudioModes=[];this.supportedImageModes=[];this.supportedVideoModes=[]}Capture.prototype.captureAudio=function(successCallback,errorCallback,options){_capture("captureAudio",successCallback,errorCallback,options)};Capture.prototype.captureImage=function(successCallback,errorCallback,options){_capture("captureImage",successCallback,errorCallback,options)};Capture.prototype.captureVideo=function(successCallback,errorCallback,options){_capture("captureVideo",successCallback,errorCallback,options)};module.exports=new Capture()});define("cordova/plugin/compass",function(require,exports,module){var exec=require("cordova/exec"),utils=require("cordova/utils"),CompassHeading=require("cordova/plugin/CompassHeading"),CompassError=require("cordova/plugin/CompassError"),timers={},compass={getCurrentHeading:function(successCallback,errorCallback,options){if(typeof successCallback!=="function"){console.log("Compass Error: successCallback is not a function");return}if(errorCallback&&(typeof errorCallback!=="function")){console.log("Compass Error: errorCallback is not a function");return}var win=function(result){var ch=new CompassHeading(result.magneticHeading,result.trueHeading,result.headingAccuracy,result.timestamp);successCallback(ch)};var fail=function(code){var ce=new CompassError(code);errorCallback(ce)};exec(win,fail,"Compass","getHeading",[options])},watchHeading:function(successCallback,errorCallback,options){var frequency=(options!==undefined&&options.frequency!==undefined)?options.frequency:100;var filter=(options!==undefined&&options.filter!==undefined)?options.filter:0;if(typeof successCallback!=="function"){console.log("Compass Error: successCallback is not a function");return}if(errorCallback&&(typeof errorCallback!=="function")){console.log("Compass Error: errorCallback is not a function");return}var id=utils.createUUID();if(filter>0){timers[id]="iOS";compass.getCurrentHeading(successCallback,errorCallback,options)}else{timers[id]=window.setInterval(function(){compass.getCurrentHeading(successCallback,errorCallback)},frequency)}return id},clearWatch:function(id){if(id&&timers[id]){if(timers[id]!="iOS"){clearInterval(timers[id])}else{exec(null,null,"Compass","stopHeading",[])}delete timers[id]}}};module.exports=compass});define("cordova/plugin/console-via-logger",function(require,exports,module){var logger=require("cordova/plugin/logger");var utils=require("cordova/utils");var console=module.exports;var WinConsole=window.console;var UseLogger=false;var Timers={};function noop(){}console.useLogger=function(value){if(arguments.length){UseLogger=!!value}if(UseLogger){if(logger.useConsole()){throw new Error("console and logger are too intertwingly")}}return UseLogger};console.log=function(){if(logger.useConsole()){return}logger.log.apply(logger,[].slice.call(arguments))};console.error=function(){if(logger.useConsole()){return}logger.error.apply(logger,[].slice.call(arguments))};console.warn=function(){if(logger.useConsole()){return}logger.warn.apply(logger,[].slice.call(arguments))};console.info=function(){if(logger.useConsole()){return}logger.info.apply(logger,[].slice.call(arguments))};console.debug=function(){if(logger.useConsole()){return}logger.debug.apply(logger,[].slice.call(arguments))};console.assert=function(expression){if(expression){return}var message=utils.vformat(arguments[1],[].slice.call(arguments,2));console.log("ASSERT: "+message)};console.clear=function(){};console.dir=function(object){console.log("%o",object)};console.dirxml=function(node){console.log(node.innerHTML)};console.trace=noop;console.group=console.log;console.groupCollapsed=console.log;console.groupEnd=noop;console.time=function(name){Timers[name]=new Date().valueOf()};console.timeEnd=function(name){var timeStart=Timers[name];if(!timeStart){console.warn("unknown timer: "+name);return}var timeElapsed=new Date().valueOf()-timeStart;console.log(name+": "+timeElapsed+"ms")};console.timeStamp=noop;console.profile=noop;console.profileEnd=noop;console.count=noop;console.exception=console.log;console.table=function(data,columns){console.log("%o",data)};function wrappedOrigCall(orgFunc,newFunc){return function(){var args=[].slice.call(arguments);try{orgFunc.apply(WinConsole,args)}catch(e){}try{newFunc.apply(console,args)}catch(e){}}}for(var key in console){if(typeof WinConsole[key]=="function"){console[key]=wrappedOrigCall(WinConsole[key],console[key])}}});define("cordova/plugin/contacts",function(require,exports,module){var exec=require("cordova/exec"),ContactError=require("cordova/plugin/ContactError"),utils=require("cordova/utils"),Contact=require("cordova/plugin/Contact");var contacts={find:function(fields,successCB,errorCB,options){if(!successCB){throw new TypeError("You must specify a success callback for the find command.")}if(!fields||(utils.isArray(fields)&&fields.length===0)){if(typeof errorCB==="function"){errorCB(new ContactError(ContactError.INVALID_ARGUMENT_ERROR))}}else{var win=function(result){var cs=[];for(var i=0,l=result.length;i<l;i++){cs.push(contacts.create(result[i]))}successCB(cs)};exec(win,errorCB,"Contacts","search",[fields,options])}},create:function(properties){var i;var contact=new Contact();for(i in properties){if(typeof contact[i]!=="undefined"&&properties.hasOwnProperty(i)){contact[i]=properties[i]}}return contact}};module.exports=contacts});define("cordova/plugin/device",function(require,exports,module){var channel=require("cordova/channel"),utils=require("cordova/utils"),exec=require("cordova/exec");channel.waitForInitialization("onCordovaInfoReady");function Device(){this.available=false;this.platform=null;this.version=null;this.name=null;this.uuid=null;this.cordova=null;var me=this;channel.onCordovaReady.subscribe(function(){me.getInfo(function(info){me.available=true;me.platform=info.platform;me.version=info.version;me.name=info.name;me.uuid=info.uuid;me.cordova=info.cordova;channel.onCordovaInfoReady.fire()},function(e){me.available=false;utils.alert("[ERROR] Error initializing Cordova: "+e)})})}Device.prototype.getInfo=function(successCallback,errorCallback){if(typeof successCallback!=="function"){console.log("Device Error: successCallback is not a function");return}if(errorCallback&&(typeof errorCallback!=="function")){console.log("Device Error: errorCallback is not a function");return}exec(successCallback,errorCallback,"Device","getDeviceInfo",[])};module.exports=new Device()});define("cordova/plugin/echo",function(require,exports,module){var exec=require("cordova/exec");module.exports=function(successCallback,errorCallback,message,forceAsync){var action=forceAsync?"echoAsync":"echo";exec(successCallback,errorCallback,"Echo",action,[message])}});define("cordova/plugin/geolocation",function(require,exports,module){var utils=require("cordova/utils"),exec=require("cordova/exec"),PositionError=require("cordova/plugin/PositionError"),Position=require("cordova/plugin/Position");var timers={};function parseParameters(options){var opt={maximumAge:0,enableHighAccuracy:false,timeout:Infinity};if(options){if(options.maximumAge!==undefined&&!isNaN(options.maximumAge)&&options.maximumAge>0){opt.maximumAge=options.maximumAge}if(options.enableHighAccuracy!==undefined){opt.enableHighAccuracy=options.enableHighAccuracy}if(options.timeout!==undefined&&!isNaN(options.timeout)){if(options.timeout<0){opt.timeout=0}else{opt.timeout=options.timeout}}}return opt}function createTimeout(errorCallback,timeout){var t=setTimeout(function(){clearTimeout(t);t=null;errorCallback({code:PositionError.TIMEOUT,message:"Position retrieval timed out."})},timeout);return t}var geolocation={lastPosition:null,getCurrentPosition:function(successCallback,errorCallback,options){if(arguments.length===0){throw new Error("getCurrentPosition must be called with at least one argument.")}options=parseParameters(options);var timeoutTimer={timer:null};var win=function(p){clearTimeout(timeoutTimer.timer);if(!(timeoutTimer.timer)){return}var pos=new Position({latitude:p.latitude,longitude:p.longitude,altitude:p.altitude,accuracy:p.accuracy,heading:p.heading,velocity:p.velocity,altitudeAccuracy:p.altitudeAccuracy},(p.timestamp===undefined?new Date():((p.timestamp instanceof Date)?p.timestamp:new Date(p.timestamp))));geolocation.lastPosition=pos;successCallback(pos)};var fail=function(e){clearTimeout(timeoutTimer.timer);timeoutTimer.timer=null;var err=new PositionError(e.code,e.message);if(errorCallback){errorCallback(err)}};if(geolocation.lastPosition&&options.maximumAge&&(((new Date()).getTime()-geolocation.lastPosition.timestamp.getTime())<=options.maximumAge)){successCallback(geolocation.lastPosition)}else{if(options.timeout===0){fail({code:PositionError.TIMEOUT,message:"timeout value in PositionOptions set to 0 and no cached Position object available, or cached Position object's age exceeds provided PositionOptions' maximumAge parameter."})}else{if(options.timeout!==Infinity){timeoutTimer.timer=createTimeout(fail,options.timeout)}else{timeoutTimer.timer=true}exec(win,fail,"Geolocation","getLocation",[options.enableHighAccuracy,options.maximumAge])}}return timeoutTimer},watchPosition:function(successCallback,errorCallback,options){if(arguments.length===0){throw new Error("watchPosition must be called with at least one argument.")}options=parseParameters(options);var id=utils.createUUID();timers[id]=geolocation.getCurrentPosition(successCallback,errorCallback,options);var fail=function(e){clearTimeout(timers[id].timer);var err=new PositionError(e.code,e.message);if(errorCallback){errorCallback(err)}};var win=function(p){clearTimeout(timers[id].timer);if(options.timeout!==Infinity){timers[id].timer=createTimeout(fail,options.timeout)}var pos=new Position({latitude:p.latitude,longitude:p.longitude,altitude:p.altitude,accuracy:p.accuracy,heading:p.heading,velocity:p.velocity,altitudeAccuracy:p.altitudeAccuracy},(p.timestamp===undefined?new Date():((p.timestamp instanceof Date)?p.timestamp:new Date(p.timestamp))));geolocation.lastPosition=pos;successCallback(pos)};exec(win,fail,"Geolocation","addWatch",[id,options.enableHighAccuracy]);return id},clearWatch:function(id){if(id&&timers[id]!==undefined){clearTimeout(timers[id].timer);timers[id].timer=false;exec(null,null,"Geolocation","clearWatch",[id])}}};module.exports=geolocation});define("cordova/plugin/globalization",function(require,exports,module){var exec=require("cordova/exec"),GlobalizationError=require("cordova/plugin/GlobalizationError");var globalization={getPreferredLanguage:function(successCB,failureCB){if(typeof successCB!="function"){console.log("Globalization.getPreferredLanguage Error: successCB is not a function");return}if(typeof failureCB!="function"){console.log("Globalization.getPreferredLanguage Error: failureCB is not a function");return}exec(successCB,failureCB,"Globalization","getPreferredLanguage",[])},getLocaleName:function(successCB,failureCB){if(typeof successCB!="function"){console.log("Globalization.getLocaleName Error: successCB is not a function");return}if(typeof failureCB!="function"){console.log("Globalization.getLocaleName Error: failureCB is not a function");return}exec(successCB,failureCB,"Globalization","getLocaleName",[])},dateToString:function(date,successCB,failureCB,options){if(typeof successCB!="function"){console.log("Globalization.dateToString Error: successCB is not a function");return}if(typeof failureCB!="function"){console.log("Globalization.dateToString Error: failureCB is not a function");return}if(date instanceof Date){var dateValue;dateValue=date.valueOf();exec(successCB,failureCB,"Globalization","dateToString",[{date:dateValue,options:options}])}else{console.log("Globalization.dateToString Error: date is not a Date object")}},stringToDate:function(dateString,successCB,failureCB,options){if(typeof successCB!="function"){console.log("Globalization.stringToDate Error: successCB is not a function");return}if(typeof failureCB!="function"){console.log("Globalization.stringToDate Error: failureCB is not a function");return}if(typeof dateString=="string"){exec(successCB,failureCB,"Globalization","stringToDate",[{dateString:dateString,options:options}])}else{console.log("Globalization.stringToDate Error: dateString is not a string")}},getDatePattern:function(successCB,failureCB,options){if(typeof successCB!="function"){console.log("Globalization.getDatePattern Error: successCB is not a function");return}if(typeof failureCB!="function"){console.log("Globalization.getDatePattern Error: failureCB is not a function");return}exec(successCB,failureCB,"Globalization","getDatePattern",[{options:options}])},getDateNames:function(successCB,failureCB,options){if(typeof successCB!="function"){console.log("Globalization.getDateNames Error: successCB is not a function");return}if(typeof failureCB!="function"){console.log("Globalization.getDateNames Error: failureCB is not a function");return}exec(successCB,failureCB,"Globalization","getDateNames",[{options:options}])},isDayLightSavingsTime:function(date,successCB,failureCB){if(typeof successCB!="function"){console.log("Globalization.isDayLightSavingsTime Error: successCB is not a function");return}if(typeof failureCB!="function"){console.log("Globalization.isDayLightSavingsTime Error: failureCB is not a function");return}if(date instanceof Date){var dateValue;dateValue=date.valueOf();exec(successCB,failureCB,"Globalization","isDayLightSavingsTime",[{date:dateValue}])}else{console.log("Globalization.isDayLightSavingsTime Error: date is not a Date object")}},getFirstDayOfWeek:function(successCB,failureCB){if(typeof successCB!="function"){console.log("Globalization.getFirstDayOfWeek Error: successCB is not a function");return}if(typeof failureCB!="function"){console.log("Globalization.getFirstDayOfWeek Error: failureCB is not a function");return}exec(successCB,failureCB,"Globalization","getFirstDayOfWeek",[])},numberToString:function(number,successCB,failureCB,options){if(typeof successCB!="function"){console.log("Globalization.numberToString Error: successCB is not a function");return}if(typeof failureCB!="function"){console.log("Globalization.numberToString Error: failureCB is not a function");return}if(typeof number=="number"){exec(successCB,failureCB,"Globalization","numberToString",[{number:number,options:options}])}else{console.log("Globalization.numberToString Error: number is not a number")}},stringToNumber:function(numberString,successCB,failureCB,options){if(typeof successCB!="function"){console.log("Globalization.stringToNumber Error: successCB is not a function");return}if(typeof failureCB!="function"){console.log("Globalization.stringToNumber Error: failureCB is not a function");return}if(typeof numberString=="string"){exec(successCB,failureCB,"Globalization","stringToNumber",[{numberString:numberString,options:options}])}else{console.log("Globalization.stringToNumber Error: numberString is not a string")}},getNumberPattern:function(successCB,failureCB,options){if(typeof successCB!="function"){console.log("Globalization.getNumberPattern Error: successCB is not a function");return}if(typeof failureCB!="function"){console.log("Globalization.getNumberPattern Error: failureCB is not a function");return}exec(successCB,failureCB,"Globalization","getNumberPattern",[{options:options}])},getCurrencyPattern:function(currencyCode,successCB,failureCB){if(typeof successCB!="function"){console.log("Globalization.getCurrencyPattern Error: successCB is not a function");return}if(typeof failureCB!="function"){console.log("Globalization.getCurrencyPattern Error: failureCB is not a function");return}if(typeof currencyCode=="string"){exec(successCB,failureCB,"Globalization","getCurrencyPattern",[{currencyCode:currencyCode}])}else{console.log("Globalization.getCurrencyPattern Error: currencyCode is not a currency code")}}};module.exports=globalization});define("cordova/plugin/logger",function(require,exports,module){var logger=exports;var exec=require("cordova/exec");var utils=require("cordova/utils");var UseConsole=true;var Queued=[];var DeviceReady=false;var CurrentLevel;var Levels=["LOG","ERROR","WARN","INFO","DEBUG"];var LevelsMap={};for(var i=0;i<Levels.length;i++){var level=Levels[i];LevelsMap[level]=i;logger[level]=level}CurrentLevel=LevelsMap.WARN;logger.level=function(value){if(arguments.length){if(LevelsMap[value]===null){throw new Error("invalid logging level: "+value)}CurrentLevel=LevelsMap[value]}return Levels[CurrentLevel]};logger.useConsole=function(value){if(arguments.length){UseConsole=!!value}if(UseConsole){if(typeof console=="undefined"){throw new Error("global console object is not defined")}if(typeof console.log!="function"){throw new Error("global console object does not have a log function")}if(typeof console.useLogger=="function"){if(console.useLogger()){throw new Error("console and logger are too intertwingly")}}}return UseConsole};logger.log=function(message){logWithArgs("LOG",arguments)};logger.error=function(message){logWithArgs("ERROR",arguments)};logger.warn=function(message){logWithArgs("WARN",arguments)};logger.info=function(message){logWithArgs("INFO",arguments)};logger.debug=function(message){logWithArgs("DEBUG",arguments)};function logWithArgs(level,args){args=[level].concat([].slice.call(args));logger.logLevel.apply(logger,args)}logger.logLevel=function(level,message){var formatArgs=[].slice.call(arguments,2);message=utils.vformat(message,formatArgs);if(LevelsMap[level]===null){throw new Error("invalid logging level: "+level)}if(LevelsMap[level]>CurrentLevel){return}if(!DeviceReady&&!UseConsole){Queued.push([level,message]);return}if(!UseConsole){exec(null,null,"Logger","logLevel",[level,message]);return}if(console.__usingCordovaLogger){throw new Error("console and logger are too intertwingly")}switch(level){case logger.LOG:console.log(message);break;case logger.ERROR:console.log("ERROR: "+message);break;case logger.WARN:console.log("WARN: "+message);break;case logger.INFO:console.log("INFO: "+message);break;case logger.DEBUG:console.log("DEBUG: "+message);break}};logger.__onDeviceReady=function(){if(DeviceReady){return}DeviceReady=true;for(var i=0;i<Queued.length;i++){var messageArgs=Queued[i];logger.logLevel(messageArgs[0],messageArgs[1])}Queued=null};document.addEventListener("deviceready",logger.__onDeviceReady,false)});define("cordova/plugin/network",function(require,exports,module){var exec=require("cordova/exec"),cordova=require("cordova"),channel=require("cordova/channel"),utils=require("cordova/utils");if(typeof navigator!="undefined"){utils.defineGetter(navigator,"onLine",function(){return this.connection.type!="none"})}var NetworkConnection=function(){this.type=null;this._firstRun=true;this._timer=null;this.timeout=500;var me=this;channel.onCordovaReady.subscribe(function(){me.getInfo(function(info){me.type=info;if(info==="none"){me._timer=setTimeout(function(){cordova.fireDocumentEvent("offline");me._timer=null},me.timeout)}else{if(me._timer!==null){clearTimeout(me._timer);me._timer=null}cordova.fireDocumentEvent("online")}if(me._firstRun){me._firstRun=false;channel.onCordovaConnectionReady.fire()}},function(e){if(me._firstRun){me._firstRun=false;channel.onCordovaConnectionReady.fire()}console.log("Error initializing Network Connection: "+e)})})};NetworkConnection.prototype.getInfo=function(successCallback,errorCallback){exec(successCallback,errorCallback,"NetworkStatus","getConnectionInfo",[])};module.exports=new NetworkConnection()});define("cordova/plugin/notification",function(require,exports,module){var exec=require("cordova/exec");module.exports={alert:function(message,completeCallback,title,buttonLabel){var _title=(title||"Alert");var _buttonLabel=(buttonLabel||"OK");exec(completeCallback,null,"Notification","alert",[message,_title,_buttonLabel])},confirm:function(message,resultCallback,title,buttonLabels){var _title=(title||"Confirm");var _buttonLabels=(buttonLabels||"OK,Cancel");exec(resultCallback,null,"Notification","confirm",[message,_title,_buttonLabels])},vibrate:function(mills){exec(null,null,"Notification","vibrate",[mills])},beep:function(count){exec(null,null,"Notification","beep",[count])}}});define("cordova/plugin/requestFileSystem",function(require,exports,module){var FileError=require("cordova/plugin/FileError"),FileSystem=require("cordova/plugin/FileSystem"),exec=require("cordova/exec");var requestFileSystem=function(type,size,successCallback,errorCallback){var fail=function(code){if(typeof errorCallback==="function"){errorCallback(new FileError(code))}};if(type<0||type>3){fail(FileError.SYNTAX_ERR)}else{var success=function(file_system){if(file_system){if(typeof successCallback==="function"){var result=new FileSystem(file_system.name,file_system.root);successCallback(result)}}else{fail(FileError.NOT_FOUND_ERR)}};exec(success,fail,"File","requestFileSystem",[type,size])}};module.exports=requestFileSystem});define("cordova/plugin/resolveLocalFileSystemURI",function(require,exports,module){var DirectoryEntry=require("cordova/plugin/DirectoryEntry"),FileEntry=require("cordova/plugin/FileEntry"),FileError=require("cordova/plugin/FileError"),exec=require("cordova/exec");module.exports=function(uri,successCallback,errorCallback){var fail=function(error){if(typeof errorCallback==="function"){errorCallback(new FileError(error))}};if(!uri||uri.split(":").length>2){setTimeout(function(){fail(FileError.ENCODING_ERR)},0);return}var success=function(entry){var result;if(entry){if(typeof successCallback==="function"){result=(entry.isDirectory)?new DirectoryEntry(entry.name,entry.fullPath):new FileEntry(entry.name,entry.fullPath);try{successCallback(result)}catch(e){console.log("Error invoking callback: "+e)}}}else{fail(FileError.NOT_FOUND_ERR)}};exec(success,fail,"File","resolveLocalFileSystemURI",[uri])}});define("cordova/plugin/splashscreen",function(require,exports,module){var exec=require("cordova/exec");var splashscreen={show:function(){exec(null,null,"SplashScreen","show",[])},hide:function(){exec(null,null,"SplashScreen","hide",[])}};module.exports=splashscreen});define("cordova/utils",function(require,exports,module){var utils=exports;utils.defineGetter=function(obj,key,func){if(Object.defineProperty){Object.defineProperty(obj,key,{get:func})}else{obj.__defineGetter__(key,func)}};utils.isArray=function(a){return Object.prototype.toString.call(a)=="[object Array]"};utils.isDate=function(d){return Object.prototype.toString.call(d)=="[object Date]"};utils.clone=function(obj){if(!obj||typeof obj=="function"||utils.isDate(obj)||typeof obj!="object"){return obj}var retVal,i;if(utils.isArray(obj)){retVal=[];for(i=0;i<obj.length;++i){retVal.push(utils.clone(obj[i]))}return retVal}retVal={};for(i in obj){if(!(i in retVal)||retVal[i]!=obj[i]){retVal[i]=utils.clone(obj[i])}}return retVal};utils.close=function(context,func,params){if(typeof params=="undefined"){return function(){return func.apply(context,arguments)}}else{return function(){return func.apply(context,params)}}};utils.createUUID=function(){return UUIDcreatePart(4)+"-"+UUIDcreatePart(2)+"-"+UUIDcreatePart(2)+"-"+UUIDcreatePart(2)+"-"+UUIDcreatePart(6)};utils.extend=(function(){var F=function(){};return function(Child,Parent){F.prototype=Parent.prototype;Child.prototype=new F();Child.__super__=Parent.prototype;Child.prototype.constructor=Child}}());utils.alert=function(msg){if(window.alert){window.alert(msg)}else{if(console&&console.log){console.log(msg)}}};utils.format=function(formatString){var args=[].slice.call(arguments,1);return utils.vformat(formatString,args)};utils.vformat=function(formatString,args){if(formatString===null||formatString===undefined){return""}if(arguments.length==1){return formatString.toString()}if(typeof formatString!="string"){return formatString.toString()}var pattern=/(.*?)%(.)(.*)/;var rest=formatString;var result=[];while(args.length){var arg=args.shift();var match=pattern.exec(rest);if(!match){break}rest=match[3];result.push(match[1]);if(match[2]=="%"){result.push("%");args.unshift(arg);continue}result.push(formatted(arg,match[2]))}result.push(rest);return result.join("")};function UUIDcreatePart(length){var uuidpart="";for(var i=0;i<length;i++){var uuidchar=parseInt((Math.random()*256),10).toString(16);if(uuidchar.length==1){uuidchar="0"+uuidchar}uuidpart+=uuidchar}return uuidpart}function formatted(object,formatChar){try{switch(formatChar){case"j":case"o":return JSON.stringify(object);case"c":return""}}catch(e){return"error JSON.stringify()ing argument: "+e}if((object===null)||(object===undefined)){return Object.prototype.toString.call(object)}return object.toString()}});window.cordova=require("cordova");(function(context){if(typeof navigator!="undefined"){var CordovaNavigator=function(){};CordovaNavigator.prototype=navigator;navigator=new CordovaNavigator()}var channel=require("cordova/channel"),_self={boot:function(){channel.join(function(){var builder=require("cordova/builder"),base=require("cordova/common"),platform=require("cordova/platform");builder.build(base.objects).intoButDoNotClobber(window);builder.build(platform.objects).intoAndClobber(window);if(typeof platform.merges!=="undefined"){builder.build(platform.merges).intoAndMerge(window)}platform.initialize();channel.onCordovaReady.fire();channel.join(function(){require("cordova").fireDocumentEvent("deviceready")},channel.deviceReadyChannelsArray)},[channel.onDOMContentLoaded,channel.onNativeReady])}};channel.onNativeReady.subscribe(_self.boot);if(window._nativeReady){channel.onNativeReady.fire()}}(window))})();var PhoneGap=cordova;